
.PHONY = clean purge install outputdir

CC = gcc

GCCVERSION = 4
GCCVERSION_TEST := $(shell expr `gcc -dumpversion | cut -f1 -d.` \> 4)

ifeq ($(GCCVERSION_TEST), 1)
    GCCVERSION = 5
endif

TARGET_DIR = ../bin
TARGET= $(TARGET_DIR)/_cplugin.so
DEST_DIR = /usr/lib/python2.7

INCLUDEDIR = -I../include
INCLUDEDIR += -I../../libcollections/include
INCLUDEDIR += -I/usr/include/python2.7

LIBDIR = -L/usr/local/lib
LIBS = -ldl -lpython2.7 -lm -lmagic

CFLAGS = -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall \
	 -Wstrict-prototypes -fPIC -DLIBCOLLECTIONS_COMPILE -DLINUX \
	 -D_GNU_SOURCE $(INCLUDEDIR)

ifeq ($(GCCVERSION), 5)
    CFLAGS += -fgnu89-inline
endif

PLUGIN_PATH = ./plugin
PYTHON_PATH = ./python
VPATH = ../include:.:$(PLUGIN_PATH):$(PYTHON_PATH)

PLUGIN_SOURCES = $(wildcard $(PLUGIN_PATH)/*.c)
PLUGIN_SOURCES := $(filter-out $(PLUGIN_PATH)/dl_java.c, $(PLUGIN_SOURCES))
PLUGIN_OBJS = $(PLUGIN_SOURCES:.c=.o)
#PLUGIN_OBJS =	\
	api_parser.o	\
	call.o			\
	dl.o			\
	dl_elf.o		\
	dl_python.o		\
	info.o			\
	pl_misc.o		\
	rv.o

PYTHON_SOURCES = $(wildcard $(PYTHON_PATH)/*.c)
PYTHON_OBJS = $(PYTHON_SOURCES:.c=.o)
#PYTHON_OBJS =	\
	_cplugin.o

OBJS = 		\
	$(PLUGIN_OBJS)	\
	$(PYTHON_OBJS)	\
	dll.o			\
	error.o			\
	file.o			\
	init.o			\
	intl.o			\
	json.o			\
	mem.o			\
	object.o		\
	plugin.o		\
	random.o		\
	ref.o			\
	specs.o			\
	string.o		\
	stringlist.o	\
	typeof.o		\
	util.o

LINK_FLAGS = -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions \
			 -Wl,-Bsymbolic-functions -Wl,-z,relro

$(TARGET): outputdir $(OBJS)
	$(CC) $(LINK_FLAGS) -o $(TARGET) $(OBJS) $(LIBDIR) $(LIBS)

clean:
	rm -rf $(OBJS) $(TARGET) *~ ../include/*~

purge: clean $(TARGET)

install:
	cp -f $(TARGET) $(DEST_DIR)

outputdir: $(TARGET_DIR)

$(TARGET_DIR):
	mkdir -p $(TARGET_DIR)

